[{"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/index.js":"1","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/Companies.js":"2","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/Transactions.js":"3","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/Header.js":"4","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/EditCompanies.js":"5","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/Inventory.js":"6","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/CreateOrder.js":"7","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/Layout.js":"8","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/InventoryComponent.js":"9","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/Footer.js":"10","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/MainPage.js":"11"},{"size":979,"mtime":1607708420472,"results":"12","hashOfConfig":"13"},{"size":2509,"mtime":1607454683158,"results":"14","hashOfConfig":"13"},{"size":6162,"mtime":1607569624597,"results":"15","hashOfConfig":"13"},{"size":1196,"mtime":1607377376396,"results":"16","hashOfConfig":"13"},{"size":2210,"mtime":1607377557012,"results":"17","hashOfConfig":"13"},{"size":1306,"mtime":1607377376396,"results":"18","hashOfConfig":"13"},{"size":9485,"mtime":1607645159744,"results":"19","hashOfConfig":"13"},{"size":443,"mtime":1607377376396,"results":"20","hashOfConfig":"13"},{"size":257,"mtime":1607377376396,"results":"21","hashOfConfig":"13"},{"size":250,"mtime":1607390624047,"results":"22","hashOfConfig":"13"},{"size":1026,"mtime":1607377376396,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pnd84a",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/index.js",[],"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/Companies.js",[],["51","52"],"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/Transactions.js",["53"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Fab from '@material-ui/core/Fab';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport \"../CSS/Transactions.css\";\nimport { Component } from \"react\";\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction createData(date, order, supplier, value) {\n  return {\n    date, order, supplier, value,\n    status: [\n      { company: 'C1', date: '16:35:43 24-02-2020', message: \"REJECTED_NO_STOCK\" },\n      { company: 'C2', date: '16:30:12 24-02-2020', message: \"INITIATE_ORDER\" },\n    ],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell id=\"min-col\" align=\"center\">\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell id=\"date-col\" align=\"left\">{row.date}</TableCell>\n        <TableCell id=\"order-col\" align=\"left\">{row.order}</TableCell>\n        <TableCell id=\"supplier-col\" align=\"center\">{row.supplier}</TableCell>\n        <TableCell id=\"min-col\" align=\"center\">{row.value}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell id=\"sub-table-header\" align=\"center\">Company</TableCell>\n                    <TableCell id=\"sub-table-header\" align=\"center\">Date</TableCell>\n                    <TableCell id=\"sub-table-header\" align=\"center\">Message</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.status.map((statusRow) => (\n                    <TableRow key={statusRow.company}>\n                      <TableCell id=\"sub-table\" align=\"center\" component=\"th\" scope=\"row\">\n                        {statusRow.company}\n                      </TableCell>\n                      <TableCell id=\"sub-table\" align=\"center\">{statusRow.date}</TableCell>\n                      <TableCell id=\"sub-table\" align=\"center\">{statusRow.message}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    order: PropTypes.string.isRequired,\n    supplier: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    status: PropTypes.arrayOf(\n      PropTypes.shape({\n        company: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n        message: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n  }).isRequired,\n};\n\n\nclass Transactions extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      data: []\n    }\n  }\n  componentDidMount() {\n    const requestOptions = {\n      method: 'GET',\n    };\n\n    fetch('http://localhost:5000/transaction/orders', requestOptions)\n      .then((res) => (res.clone().text()))\n      .then((res) => (this.setState((prevState) => ({\n        isLoading: !prevState.isLoading,\n        data: JSON.parse(res).result\n      }))));\n\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <h1>I am loading</h1>\n      );\n    } else {\n      console.log(this.state.data)\n      return (\n        <TableContainer component={Paper}>\n          <Button id=\"transactions-label\" disabled={true} variant=\"contained\">Transactions</Button>\n          <Table id=\"collapsible-table\" aria-label=\"collapsible table\">\n            <TableHead>\n              <TableRow>\n                <TableCell id=\"min-col\" align=\"center\">Status</TableCell>\n                <TableCell id=\"date-col\" align=\"left\">Date/Time&nbsp;</TableCell>\n                <TableCell id=\"order-col\" align=\"left\">Order&nbsp;</TableCell>\n                <TableCell id=\"supplier-col\" align=\"center\">Supplier&nbsp;</TableCell>\n                <TableCell id=\"min-col\" align=\"center\">Value&nbsp;</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.data.filter(aux => aux.documentTypeDescription == \"Encomenda a fornecedor\").map((orders) => {\n                var date = orders.createdOn.substring(0,19).replace(\"T\",\" \");\n                var order = orders.documentLines[0].quantity + 'x ' + orders.documentLines[0].description;\n                var supplier = orders.sellerSupplierPartyName;\n                var value = orders.payableAmount.amount + ' ' + orders.payableAmount.symbol;\n                /* console.log(date, order, supplier, value); */\n                return <Row row={createData(date, order, supplier, value)} />;\n              })}\n            </TableBody>\n          </Table>\n\n          <Fab href=\"CreateOrder\" color=\"primary\" aria-label=\"add\">\n            <AddIcon />\n          </Fab>\n        </TableContainer>\n      );\n    }\n  }\n}\n\nexport default Transactions;","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/Header.js",[],"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/EditCompanies.js",[],["54","55"],"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/Inventory.js",[],"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/CreateOrder.js",["56","57"],"import React from 'react';\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport \"../CSS/CreateOrder.css\";\nimport { Container } from \"react-bootstrap\";\nimport Select from \"@material-ui/core/Select\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Form from 'react-bootstrap/Form'\nimport { Col, Row } from \"react-bootstrap\";\nimport { Component } from \"react\";\nimport FormControl from '@material-ui/core/FormControl';\nimport axios from 'axios';\n\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.white,\n    },\n  },\n}))(TableRow);\n\n\nclass CreateOrder extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      company: \"loles\",\n      name: \"hai\",\n      isLoading: true,\n      data: []\n    };\n    this.selectedCheckboxes = new Set();\n\n  }\n\n  componentDidMount() {\n    const requestOptions = {\n      method: 'GET',\n    };\n\n    fetch('http://localhost:5000/transaction/salesitems', requestOptions)\n      .then((res) => (res.clone().text()))\n      .then((res) => (this.setState((prevState) => ({\n        isLoading: !prevState.isLoading,\n        data: JSON.parse(res).result\n      }))));\n\n  }\n\n\n  render() {\n\n    const handleChange = (event) => {\n      this.setState({\n        name: this.state.name,\n        steps: this.state.itemsForm,\n        open: false,\n        value: '',\n        supplier: ''\n      });\n    };\n    const handleClickOpen = () => {\n      this.setState({ open: true });\n    };\n\n    const handleClose = () => {\n      this.selectedCheckboxes.clear();\n      this.setState({ open: false });\n    };\n\n    const handleSave = () => {\n      console.log(this.selectedCheckboxes);\n      this.setState({ open: false });\n    };\n\n    const handleSubmit = async (event) => {\n      event.preventDefault();\n      console.log(\"TOU AQUIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII\");\n      const requestOptions = {\n        method: 'POST',\n      };\n      try {\n        await axios.post('http://localhost:5000/transaction/createorder', requestOptions);\n      } catch (error) {\n        return error;\n      }\n\n\n    }\n\n\n    const toggleCheckbox = id => {\n      if (this.selectedCheckboxes.has(id.target.id)) {\n        this.selectedCheckboxes.delete(id.target.id);\n      } else {\n        this.selectedCheckboxes.add(id.target.id);\n      }\n    };\n\n\n    const onChange = e => {\n      //replace non-digits with blank\n      const value = e.target.value.replace(/[^\\d]/, '');\n\n      if (parseInt(value) !== 0) {\n        this.setState({ value });\n      }\n    };\n\n\n    /*   submitHandler = (event) => {\n        event.preventDefault();\n        \n      } */\n\n\n    if (this.state.isLoading) {\n      return (\n        <h1>I am loading</h1>\n      );\n    } else {\n      console.log(this.state.data)\n      return (\n        <Container id=\"container\">\n          <Button id=\"createOrder-label\" disabled={true} variant=\"contained\">Create Order</Button>\n          <Button href=\"Transactions\" id=\"cancel\" variant=\"contained\">Cancel</Button>\n          <Form /* onSubmit ={this.submitHandler}  */ onSubmit={handleSubmit} id=\"form\">\n            <Form.Group id=\"row\" as={Row} controlId=\"formPlaintextEmail\">\n              <Form.Label column sm=\"2\">Supplier</Form.Label>\n              <Col sm=\"10\">\n                <Select\n                  native\n                  //value={state.company}------------------------------todo, onde guardar\n                  onChange={handleChange}\n                  inputProps={{\n                    name: \"company\",\n                    id: \"filled-company-native-simple\",\n                  }}\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  <option value={this.state.supplier}> SINF </option>\n                </Select>\n              </Col>\n            </Form.Group>\n\n            <Form.Group id=\"rowproduct\" as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm=\"2\">\n                Product\n            </Form.Label>\n              <Col sm=\"10\">\n                <Button id=\"label\" onClick={handleClickOpen}> Select your Product </Button>\n              </Col>\n            </Form.Group>\n            <Grid container spacing={3}>\n\n\n              <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\n                <DialogTitle> Select your Product </DialogTitle>\n\n                <DialogContent>\n                  <Table aria-label=\"customized table\">\n                    <TableBody>\n                      <Table aria-label=\"customized table\">\n                        <TableHead>\n                          <TableRow>\n                            <StyledTableCell id=\"header1\"> </StyledTableCell>\n                            <StyledTableCell id=\"header\" align=\"center\">\n                              Product Name\n          </StyledTableCell>\n                            <StyledTableCell id=\"header\" align=\"center\"> Description </StyledTableCell>\n                            <StyledTableCell id=\"header\" align=\"center\"> Value/Un    </StyledTableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {this.state.data.filter(aux => aux.itemKey != \"PORTES\").map((items) => {\n                            var item = items.itemKey;\n                            var description = items.description;\n                            var value = items.priceListLines[0].priceAmount.amount + ' ' + items.priceListLines[0].priceAmount.symbol;\n                            /* console.log(item, value, description); */\n                            return (\n                              <StyledTableRow key={item}>\n                                <StyledTableCell id=\"check\">\n                                  <FormControl component=\"fieldset\">\n                                    <Checkbox\n                                      id={item}\n                                      color=\"\"\n                                      inputProps={{ \"aria-label\": \"checkbox\" }}\n                                      value={{ item }}\n                                      onChange={toggleCheckbox}\n                                      defaultChecked={this.selectedCheckboxes.has(items.itemKey)}\n                                    />\n                                  </FormControl>\n                                </StyledTableCell>\n                                <StyledTableCell id=\"products\" align=\"center\">\n                                  {item}\n                                </StyledTableCell>\n                                <StyledTableCell id=\"products\" align=\"center\">\n                                  {description}\n                                </StyledTableCell>\n                                <StyledTableCell id=\"products\" align=\"center\">\n                                  {value}\n                                </StyledTableCell>\n                              </StyledTableRow>\n                            )\n                          })}\n                        </TableBody>\n                      </Table >\n                    </TableBody>\n                  </Table>\n                </DialogContent>\n\n                <DialogActions>\n                  <Button autoFocus onClick={handleClose} color=\"\">\n                    Cancel\n          </Button>\n                  <Button autoFocus onClick={handleSave} color=\"\">\n                    Save\n          </Button>\n                </DialogActions>\n              </Dialog>\n\n            </Grid>\n            <Form.Group id=\"row\" as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm=\"2\">\n                Quantity\n            </Form.Label>\n              <Col sm=\"10\">\n                <TextField\n                  id=\"outlined-number\"\n                  label=\"Number\"\n                  type=\"number\"\n                  value={this.state.value}\n                  onChange={onChange}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  variant=\"outlined\"\n                />        </Col>\n            </Form.Group>\n\n            <Form.Group id=\"row\" as={Row} controlId=\"formPlaintextPassword\">\n              <Form.Label column sm=\"2\">\n                Total\n            </Form.Label>\n              <Col sm=\"10\">\n                <Button id=\"label\" disabled={true} variant=\"contained\">Total</Button>\n              </Col>\n            </Form.Group>\n            <Button id=\"submit\" type=\"submit\" variant=\"contained\">Submit</Button>\n          </Form>\n\n\n        </Container>\n      );\n\n    }\n  }\n}\n\nexport default CreateOrder;","/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/Layout.js",[],"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/InventoryComponent.js",[],"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Components/Footer.js",[],"/home/mariana/Desktop/sinf definitivo/SINF2O2O/fe/src/Pages/MainPage.js",[],["58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":153,"column":74,"nodeType":"66","messageId":"67","endLine":153,"endColumn":76},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":22,"nodeType":"72","messageId":"73","endLine":2,"endColumn":32},{"ruleId":"64","severity":1,"message":"74","line":199,"column":70,"nodeType":"66","messageId":"67","endLine":199,"endColumn":72},{"ruleId":"60","replacedBy":"75"},{"ruleId":"62","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["77"],["78"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.",["77"],["78"],"no-global-assign","no-unsafe-negation"]